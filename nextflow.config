profiles {
    codon {
        env {
            NXF_OPTS = '-Xms500m'       // '-Xmx500m'
            NXF_DEBUG = '0'
        }
        workDir = '/nfs/production/cochrane/ena/temp/nextflow-workDir'
        cleanup = true
        singularity {
            enabled = true
            cacheDir = '/nfs/production/cochrane/ena/temp/singularity'
        }
        process {
            executor = 'lsf'
            container = 'docker://quay.io/nextflow/bash'
            errorStrategy = 'ignore'
        }
        executor {
            time = '1h'
//            clusterOptions =
//            perJobMemLimit =
//            queue = ''
        }
        tower {
            endpoint = 'https://tower.nf'
        }
    }
    standard {
        env {
            NXF_OPTS = '-Xms500m'       // '-Xmx500m'
            NXF_DEBUG = '0'
        }
        process {
            executor = 'local'
            container = 'quay.io/nextflow/bash'
            errorStrategy = 'ignore'
        }
        tower {
            endpoint = 'https://tower.nf'
        }
    }
    gls {
        env {
            NXF_OPTS = '-Xms500m'       // '-Xmx500m'
            NXF_DEBUG = '0'
        }
//        timeline {
//            enabled = 'true'
//            file = 'timeline.html'
//        }
//        dag {
//            enabled = 'true'
//            file = 'flowchart.png'
//        }
        process {
            executor = 'google-lifesciences'
            container = 'quay.io/nextflow/bash'
            disk = '10 GB'
            errorStrategy = 'ignore'
        }
        executor {
            queueSize = '1000'
            submitRateLimit = '2000 second'
        }
        google {
            lifeSciences {
                preemptible = 'true'
                //usePrivateAddress = 'false'     // public IP is required unless everything is on GCP
            }
            location = 'europe-west4'
            region = 'europe-west4'
            project = 'prj-int-dev-covid19-nf-gls'
            enableRequesterPaysBuckets = 'true'
        }
        tower {
            endpoint = 'https://tower.nf'
        }
        // report {
        //     enabled = 'true'
        //     overwrite = 'true'
        // }
        // trace {
        //     enabled = 'true'
        //     overwrite = 'true'
        // }
    }
}